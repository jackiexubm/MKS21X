public class BarCode implements Comparable{
    // instance variables
    private String _zip;
    private int _checkDigit;

    // constructors
    //precondtion: zip.length() = 5 and zip contains only digits.
    //postcondition: throws a runtime exception zip is not the correct length
    //               or zip contains a non digit
    //               _zip and _checkDigit are initialized.
    public BarCode(String zip) {
	if(zip.length() != 5 || !zip.contains("[0-9]+")){
		throw new RuntimeException();
	}
	_zip = zip;
	_checkDigit = checkSum(); 
    }

	    
    // postcondition: Creates a copy of a bar code.
    public BarCode(BarCode x){
	_zip = x._zip;
	_checkDigit = x._checkDigit;	
    }
    

    public static final String[] conversion = {"||:::",  //0
	                                       ":::||",  //1
					       "::|:|",  //2
					       "::||:",  //3
					       ":|::|",  //4
					       ":|:|:",  //5
					       ":||::",  //6
					       "|:::|",  //7
					       "|::|:",  //8
					       "|:|::"};  //9  

    //post: computes and returns the check sum for _zip
    private int checkSum(){
	int sum = 0;
	for (int i = 0; i < 5; i++){
	    sum = sum + Integer.parseInt(_zip.substring(i,i+1));
	}
	return sum % 10;
    }
    
    //postcondition: format zip + check digit + barcode 
    //ex. "084518  |||:::|::|::|::|:|:|::::|||::|:|"      
    public String toString(){
	String code = "";
	for (int i = 0; i < 5; i ++){
	    code = code + conversion[Integer.parseInt(_zip.substring(i,i+1))];
	}
	return _zip + _checkDigit + " |" + code + "|";
    }
    

    public boolean equals(Object other){
	return other == this || other instanceof BarCode && _zip.equals(((BarCode)other)._zip);
    }
    // postcondition: false if the object is not a BarCode, 
    // false if it is a non-matching barcode
    // true when they match.


    public int compareTo(Object other){
	if(!(other instanceof BarCode)){
	    throw new RuntimeException();
	}
	return Integer.parseInt(_zip) - Integer.parseInt(((BarCode)other)._zip);
}
    // postcondition: compares the zip + checkdigit 

}
